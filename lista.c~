#ifndef std
	#include<stdio.h>
	#include<string.h>
	#include<"estructura"
#endif

typedef struct C{
	void *cont;
	C *next,*prev;
}caja;

typedef struct {
	caja *first;
	int tam;
} lista;

void inicializar(lista *l){
	l->primero=NULL;
	l->tam=0;
}

int agregar_elem(lista *l, caja *c, int (*fptr)(void *,void *)){
	if(!esta(lista,c,fptr,0)){
		c->next = l->first;
		c->prev = NULL;
		(l->first)->prev = c;
		(l->tam)++;
		l->first = c;
		return 0;
	}
	return 1;
//	else{
//		perror("Archivo o directorio ya existente\n");
//		return 1;
//	}
}



int esta(lista *l, caja *c, int(*fptr (void *, void *)), int opcion){
	caja *buscar = l->first;

	while(buscar!=NULL){
		if(fptr((void *) buscar, (void *) c)) break;
		buscar = buscar-> next;
	}

	//veo si estaba el elemento
	if(buscar==NULL) return 0;

	//Si solo tengo que buscar, retorno
	if(!opcion) return 1;

	//Si tengo que borrar libero memoria y actualizo
	if(puedoBorrar(buscar)){
		if(buscar->prev==NULL) 
			l->first = buscar->next;
		else
			(buscar->prev)->next = buscar->next;

		if(buscar->next!=NULL)
			(buscar->next)->prev = buscar->prev;

		(l->tam)--;
		liberar(buscar);
	}

	return 1;
}
